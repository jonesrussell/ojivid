version: '3'

# --------------------------------------------
# Global Variables
# --------------------------------------------
vars:
  VERSION: git describe --tags --always --dirty
  BUILD_TIME: Get-Date -Format yyyy-MM-dd_HH:mm:ss
  GIT_COMMIT: git rev-parse HEAD
  GO_VERSION: '(go version).Split(\" \")[2]'

  # Platform detection
  PLATFORM: '{{if eq OS "windows"}}windows{{else if eq OS "linux"}}linux{{else}}unknown{{end}}'

  # Directories
  BIN_DIR: "bin"
  FRONTEND_DIR: "webview"
  UPLOAD_DIR: "uploads"
  MAIN_PACKAGE: "main.go"
  DIST_DIR: "static/dist"

  # Build flags
  LDFLAGS: >-
    -s -w -X main.version={{.VERSION}} -X main.buildTime={{.BUILD_TIME}} -X main.gitCommit={{.GIT_COMMIT}} -X main.goVersion={{.GO_VERSION}}

# --------------------------------------------
# Taskfile Settings
# --------------------------------------------
output: prefixed
silent: false

# Include platform-specific task files
includes:
  windows: ./Taskfile.windows.yml
  linux: ./Taskfile.linux.yml

# --------------------------------------------
# General Tasks
# --------------------------------------------
tasks:
  default:
    desc: Install dependencies, build, and run the application
    cmds:
    - task deps
    - task build
    - task test
    - task lint

  # --------------------------------------------
  # Dependency Management
  # --------------------------------------------
  deps:
    desc: Install all dependencies
    deps: [ deps:backend, deps:frontend ]

  deps:backend:
    desc: Install Go dependencies
    cmds:
    - go mod download
    - go mod tidy

  deps:frontend:
    desc: Install frontend dependencies
    dir: "{{.FRONTEND_DIR}}"
    cmds:
    - npm install

  # --------------------------------------------
  # Build Tasks
  # --------------------------------------------
  build:
    desc: Build the application
    deps: [ build:frontend, build:backend ]

  build:frontend:
    desc: Build frontend assets
    cmds:
    - cd webview && npm run build

  build:backend:
    desc: Build backend binary
    cmds:
    - task: windows:build

  # --------------------------------------------
  # Run Tasks
  # --------------------------------------------
  run:
    desc: Run application
    cmds:
    - task windows:run

  # --------------------------------------------
  # Development Tasks
  # --------------------------------------------
  dev:
    desc: Run development server
    cmds:
    - go run main.go
    env:
      DEV: "1"
      VITE_API_URL: "http://localhost:8080"

  dev:frontend:
    desc: Run frontend with hot reloading
    dir: "{{.FRONTEND_DIR}}"
    cmds:
    - npm run dev

  dev:backend:
    desc: Run backend in development mode
    cmds:
    - go run {{.MAIN_PACKAGE}}

  # --------------------------------------------
  # Testing & Linting
  # --------------------------------------------
  test:
    desc: Run tests
    cmds:
    - go test -v -race ./...

  lint:
    desc: Run all linters
    deps: [ lint:backend, lint:frontend ]

  lint:backend:
    desc: Lint Go code
    cmds:
    - go fmt ./...
    - go vet ./...
    - golangci-lint run ./...

  lint:frontend:
    desc: Lint frontend code
    dir: "{{.FRONTEND_DIR}}"
    cmds:
    - npm run lint

  # --------------------------------------------
  # Cleanup Tasks
  # --------------------------------------------
  clean:
    desc: Clean build artifacts
    cmds:
    - task: windows:clean
